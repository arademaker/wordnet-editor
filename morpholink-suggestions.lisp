(in-package :wordnet)

;; 1   2       3       4    5    6  7      8      9   A
;; ?nm ?sptid1 ?sptid2 ?lf1 ?lf2 ?p ?lexf1 ?lexf2 ?g1 ?g2
(defun generate-html-report ()
  (let ((rows (run-query-as-list "missing-nouns.sparql")))
    (with-open-file (out "morpholinks.html" :direction :output :if-exists :supersede)
      (format out "<html><header><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></header><body><h1>Morpholinks sem tradu&ccedil;&atilde;o para o substantivo.</h1><table>")
      (dolist (rr rows)
        (let* ((r (mapcar #'upi->value rr))
               (nomlex (first r))
               (synset1 (second r))
               (synset2 (third r))
               (lexform1 (fourth r))
               (lexform2 (fifth r))
               (relation (sixth r))
               (lexfile1 (seventh r))
               (lexfile2 (eighth r))
               (gloss1 (ninth r))
               (gloss2 (tenth r)))
        (format out "<ul>~%")
        (format out "<li><a target=\"_blank\" href=\"http://wnpt.brlcloud.com/wn/synset?id=~a-v\">~a-v</a> (~a)</li>" synset1 synset1 gloss1)
        (format out "<li><a target=\"_blank\" href=\"http://wnpt.brlcloud.com/wn/synset?id=~a-n\">~a-n</a> (~a)</li>" synset2 synset2 gloss2)
        (format out "<li>~a/~a</li>" lexform1 lexform2)
        (format out "<li>~a</li>" relation)
        (format out "<li>~a/~a</li>" lexfile1 lexfile2)
        (format out "</ul>~%")))
      (format out "</table></body></html>"))))
